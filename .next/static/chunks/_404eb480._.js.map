{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/app/hooks/useErrorSystem.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useCallback, useEffect, useTransition } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { useRouter } from 'next/navigation';\r\nimport { toast } from 'react-hot-toast';\r\nimport { AppError, ErrorSeverity } from '../types/error';\r\n\r\ninterface ErrorOptions {\r\n  severity?: ErrorSeverity;\r\n  source?: string;\r\n  context?: Record<string, unknown>;\r\n  showToast?: boolean;\r\n  redirectOnCritical?: boolean;\r\n  criticalRedirectPath?: string;\r\n}\r\n\r\nconst DEFAULT_OPTIONS: ErrorOptions = {\r\n  severity: 'medium',\r\n  showToast: true,\r\n  redirectOnCritical: true,\r\n  criticalRedirectPath: '/error',\r\n};\r\n\r\nexport function useErrorSystem() {\r\n  const [errors, setErrors] = useState<AppError[]>([]);\r\n  const [hasUnreadErrors, setHasUnreadErrors] = useState<boolean>(false);\r\n  const router = useRouter();\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  const addError = useCallback((message: string, error?: Error | null, options: ErrorOptions = {}) => {\r\n    const opts = { ...DEFAULT_OPTIONS, ...options };\r\n    const errorCode = error?.name || 'APP_ERROR';\r\n    \r\n    const appError: AppError = {\r\n      message,\r\n      code: errorCode,\r\n      severity: opts.severity,\r\n      source: opts.source || 'client',\r\n      timestamp: Date.now(),\r\n      id: nanoid(),\r\n      context: opts.context,\r\n    };\r\n    \r\n    setErrors(prev => [appError, ...prev]);\r\n    setHasUnreadErrors(true);\r\n    \r\n    // 토스트 알림 표시\r\n    if (opts.showToast) {\r\n      toast.error(message, {\r\n        id: appError.id,\r\n        duration: appError.severity === 'critical' ? 6000 : 4000,\r\n      });\r\n    }\r\n    \r\n    // 심각한 오류 발생 시 리다이렉트\r\n    if (opts.redirectOnCritical && appError.severity === 'critical') {\r\n      startTransition(() => {\r\n        router.push(opts.criticalRedirectPath || '/error');\r\n      });\r\n    }\r\n    \r\n    // 선택적으로 에러 로깅 서비스에 오류 보고\r\n    if (appError.severity === 'high' || appError.severity === 'critical') {\r\n      // 예: reportErrorToService(appError);\r\n      console.error('Critical error:', appError);\r\n    }\r\n    \r\n    return appError;\r\n  }, [router]);\r\n  \r\n  const clearErrors = useCallback(() => {\r\n    setErrors([]);\r\n    setHasUnreadErrors(false);\r\n  }, []);\r\n  \r\n  const markErrorsAsRead = useCallback(() => {\r\n    setHasUnreadErrors(false);\r\n  }, []);\r\n  \r\n  const removeError = useCallback((errorId: string) => {\r\n    setErrors(prev => prev.filter(err => err.id !== errorId));\r\n  }, []);\r\n  \r\n  // 에러 발생 시 서비스 워커로 오프라인 로깅\r\n  useEffect(() => {\r\n    const handleWindowError = (event: ErrorEvent) => {\r\n      addError(\r\n        event.message || '예상치 못한 오류가 발생했습니다',\r\n        event.error, \r\n        { severity: 'high', source: 'window' }\r\n      );\r\n    };\r\n    \r\n    window.addEventListener('error', handleWindowError);\r\n    return () => window.removeEventListener('error', handleWindowError);\r\n  }, [addError]);\r\n  \r\n  return {\r\n    errors,\r\n    hasUnreadErrors,\r\n    addError,\r\n    clearErrors,\r\n    markErrorsAsRead,\r\n    removeError,\r\n    isPending,\r\n  };\r\n}"],"names":[],"mappings":";;;AAEA;AACA;AACA;;;;;;;AAJA;;;;;AAiBA,MAAM,kBAAgC;IACpC,UAAU;IACV,WAAW;IACX,oBAAoB;IACpB,sBAAsB;AACxB;AAEO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACnD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;IAEjD,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gDAAE,CAAC,SAAiB,OAAsB,UAAwB,CAAC,CAAC;YAC7F,MAAM,OAAO;gBAAE,GAAG,eAAe;gBAAE,GAAG,OAAO;YAAC;YAC9C,MAAM,YAAY,OAAO,QAAQ;YAEjC,MAAM,WAAqB;gBACzB;gBACA,MAAM;gBACN,UAAU,KAAK,QAAQ;gBACvB,QAAQ,KAAK,MAAM,IAAI;gBACvB,WAAW,KAAK,GAAG;gBACnB,IAAI,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD;gBACT,SAAS,KAAK,OAAO;YACvB;YAEA;wDAAU,CAAA,OAAQ;wBAAC;2BAAa;qBAAK;;YACrC,mBAAmB;YAEnB,YAAY;YACZ,IAAI,KAAK,SAAS,EAAE;gBAClB,MAAM,KAAK,CAAC,SAAS;oBACnB,IAAI,SAAS,EAAE;oBACf,UAAU,SAAS,QAAQ,KAAK,aAAa,OAAO;gBACtD;YACF;YAEA,oBAAoB;YACpB,IAAI,KAAK,kBAAkB,IAAI,SAAS,QAAQ,KAAK,YAAY;gBAC/D;4DAAgB;wBACd,OAAO,IAAI,CAAC,KAAK,oBAAoB,IAAI;oBAC3C;;YACF;YAEA,yBAAyB;YACzB,IAAI,SAAS,QAAQ,KAAK,UAAU,SAAS,QAAQ,KAAK,YAAY;gBACpE,qCAAqC;gBACrC,QAAQ,KAAK,CAAC,mBAAmB;YACnC;YAEA,OAAO;QACT;+CAAG;QAAC;KAAO;IAEX,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE;YAC9B,UAAU,EAAE;YACZ,mBAAmB;QACrB;kDAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wDAAE;YACnC,mBAAmB;QACrB;uDAAG,EAAE;IAEL,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE,CAAC;YAC/B;2DAAU,CAAA,OAAQ,KAAK,MAAM;mEAAC,CAAA,MAAO,IAAI,EAAE,KAAK;;;QAClD;kDAAG,EAAE;IAEL,0BAA0B;IAC1B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM;8DAAoB,CAAC;oBACzB,SACE,MAAM,OAAO,IAAI,qBACjB,MAAM,KAAK,EACX;wBAAE,UAAU;wBAAQ,QAAQ;oBAAS;gBAEzC;;YAEA,OAAO,gBAAgB,CAAC,SAAS;YACjC;4CAAO,IAAM,OAAO,mBAAmB,CAAC,SAAS;;QACnD;mCAAG;QAAC;KAAS;IAEb,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GAnFgB;;QAGC,qIAAA,CAAA,YAAS;QACa,6JAAA,CAAA,gBAAa","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/app/contexts/ErrorContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext, ReactNode } from 'react';\r\nimport { AppError, ErrorSeverity } from '../types/error';\r\nimport { useErrorSystem } from '../hooks/useErrorSystem';\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\ninterface ErrorContextType {\r\n  errors: AppError[];\r\n  hasUnreadErrors: boolean;\r\n  addError: (message: string, error?: Error | null, options?: {\r\n    severity?: ErrorSeverity;\r\n    source?: string;\r\n    context?: Record<string, unknown>;\r\n    showToast?: boolean;\r\n    redirectOnCritical?: boolean;\r\n    criticalRedirectPath?: string;\r\n  }) => AppError;\r\n  clearErrors: () => void;\r\n  markErrorsAsRead: () => void;\r\n  removeError: (errorId: string) => void;\r\n  isPending: boolean;\r\n}\r\n\r\nconst ErrorContext = createContext<ErrorContextType | undefined>(undefined);\r\n\r\nexport function ErrorProvider({ children }: { children: ReactNode }) {\r\n  const errorSystem = useErrorSystem();\r\n  \r\n  return (\r\n    <ErrorContext.Provider value={errorSystem}>\r\n      <Toaster position=\"top-right\" />\r\n      {children}\r\n    </ErrorContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useError() {\r\n  const context = useContext(ErrorContext);\r\n  if (context === undefined) {\r\n    throw new Error('useError must be used within an ErrorProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAEA;;;;;;;;AAJA;;;;AAwBA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,EAAE,QAAQ,EAA2B;;IACjE,MAAM,cAAc,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD;IAEjC,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;;0BAC5B,6LAAC;gBAAQ,UAAS;;;;;;YACjB;;;;;;;AAGP;GATgB;;QACM,kIAAA,CAAA,iBAAc;;;KADpB;AAWT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/app/error.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useError } from './contexts/ErrorContext';\r\n\r\nexport default function GlobalErrorPage({\r\n  error,\r\n  reset,\r\n}: {\r\n  error: Error & { digest?: string };\r\n  reset: () => void;\r\n}) {\r\n  const { addError } = useError();\r\n  \r\n  useEffect(() => {\r\n    // 에러를 컨텍스트에 추가하여 일관된 관리\r\n    addError(\r\n      error.message || '애플리케이션에 치명적인 오류가 발생했습니다', \r\n      error, \r\n      { severity: 'critical', source: 'global' }\r\n    );\r\n  }, [error, addError]);\r\n  \r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-50 px-4\">\r\n      <div className=\"w-full max-w-md p-8 rounded-lg bg-white shadow-lg\">\r\n        <h1 className=\"text-2xl font-bold text-red-600 mb-4\">에러가 발생했습니다</h1>\r\n        <p className=\"text-gray-700 mb-6\">{error.message || '알 수 없는 오류가 발생했습니다'}</p>\r\n        \r\n        <div className=\"flex flex-col space-y-3\">\r\n          <button\r\n            onClick={reset}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n          >\r\n            다시 시도\r\n          </button>\r\n          \r\n          <Link \r\n            href=\"/\"\r\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors text-center\"\r\n          >\r\n            홈으로 돌아가기\r\n          </Link>\r\n        </div>\r\n        \r\n        {error.digest && (\r\n          <p className=\"mt-6 text-xs text-gray-500\">\r\n            오류 참조 코드: {error.digest}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,gBAAgB,EACtC,KAAK,EACL,KAAK,EAIN;;IACC,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,WAAQ,AAAD;IAE5B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,wBAAwB;YACxB,SACE,MAAM,OAAO,IAAI,2BACjB,OACA;gBAAE,UAAU;gBAAY,QAAQ;YAAS;QAE7C;oCAAG;QAAC;QAAO;KAAS;IAEpB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAuC;;;;;;8BACrD,6LAAC;oBAAE,WAAU;8BAAsB,MAAM,OAAO,IAAI;;;;;;8BAEpD,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAID,6LAAC,+JAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;gBAKF,MAAM,MAAM,kBACX,6LAAC;oBAAE,WAAU;;wBAA6B;wBAC7B,MAAM,MAAM;;;;;;;;;;;;;;;;;;AAMnC;GAhDwB;;QAOD,mIAAA,CAAA,WAAQ;;;KAPP","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport { urlAlphabet }\n"],"names":[],"mappings":";;;AAAA,IAAI,cACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/node_modules/nanoid/index.browser.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":[],"mappings":";;;;;;AAAA;;AACA,IAAI,SAAS,CAAA,QAAS,OAAO,eAAe,CAAC,IAAI,WAAW;AAC5D,IAAI,eAAe,CAAC,UAAU,aAAa;IACzC,IAAI,OAAO,CAAC,KAAM,KAAK,GAAG,CAAC,SAAS,MAAM,GAAG,KAAK,KAAK,GAAG,AAAC,IAAI;IAC/D,IAAI,OAAO,CAAC,CAAC,CAAC,AAAC,MAAM,OAAO,cAAe,SAAS,MAAM;IAC1D,OAAO,CAAC,OAAO,WAAW;QACxB,IAAI,KAAK;QACT,MAAO,KAAM;YACX,IAAI,QAAQ,UAAU;YACtB,IAAI,IAAI,OAAO;YACf,MAAO,IAAK;gBACV,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI;gBACnC,IAAI,GAAG,MAAM,KAAK,MAAM,OAAO;YACjC;QACF;IACF;AACF;AACA,IAAI,iBAAiB,CAAC,UAAU,OAAO,EAAE,GACvC,aAAa,UAAU,MAAM;AAC/B,IAAI,SAAS,CAAC,OAAO,EAAE,GACrB,OAAO,eAAe,CAAC,IAAI,WAAW,OAAO,MAAM,CAAC,CAAC,IAAI;QACvD,QAAQ;QACR,IAAI,OAAO,IAAI;YACb,MAAM,KAAK,QAAQ,CAAC;QACtB,OAAO,IAAI,OAAO,IAAI;YACpB,MAAM,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,IAAI,WAAW;QAC5C,OAAO,IAAI,OAAO,IAAI;YACpB,MAAM;QACR,OAAO;YACL,MAAM;QACR;QACA,OAAO;IACT,GAAG","ignoreList":[0],"debugId":null}}]
}