{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/app/hooks/useErrorSystem.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useCallback, useEffect, useTransition } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { useRouter } from 'next/navigation';\r\nimport { toast } from 'react-hot-toast';\r\nimport { AppError, ErrorSeverity } from '../types/error';\r\n\r\ninterface ErrorOptions {\r\n  severity?: ErrorSeverity;\r\n  source?: string;\r\n  context?: Record<string, unknown>;\r\n  showToast?: boolean;\r\n  redirectOnCritical?: boolean;\r\n  criticalRedirectPath?: string;\r\n}\r\n\r\nconst DEFAULT_OPTIONS: ErrorOptions = {\r\n  severity: 'medium',\r\n  showToast: true,\r\n  redirectOnCritical: true,\r\n  criticalRedirectPath: '/error',\r\n};\r\n\r\nexport function useErrorSystem() {\r\n  const [errors, setErrors] = useState<AppError[]>([]);\r\n  const [hasUnreadErrors, setHasUnreadErrors] = useState<boolean>(false);\r\n  const router = useRouter();\r\n  const [isPending, startTransition] = useTransition();\r\n\r\n  const addError = useCallback((message: string, error?: Error | null, options: ErrorOptions = {}) => {\r\n    const opts = { ...DEFAULT_OPTIONS, ...options };\r\n    const errorCode = error?.name || 'APP_ERROR';\r\n    \r\n    const appError: AppError = {\r\n      message,\r\n      code: errorCode,\r\n      severity: opts.severity,\r\n      source: opts.source || 'client',\r\n      timestamp: Date.now(),\r\n      id: nanoid(),\r\n      context: opts.context,\r\n    };\r\n    \r\n    setErrors(prev => [appError, ...prev]);\r\n    setHasUnreadErrors(true);\r\n    \r\n    // 토스트 알림 표시\r\n    if (opts.showToast) {\r\n      toast.error(message, {\r\n        id: appError.id,\r\n        duration: appError.severity === 'critical' ? 6000 : 4000,\r\n      });\r\n    }\r\n    \r\n    // 심각한 오류 발생 시 리다이렉트\r\n    if (opts.redirectOnCritical && appError.severity === 'critical') {\r\n      startTransition(() => {\r\n        router.push(opts.criticalRedirectPath || '/error');\r\n      });\r\n    }\r\n    \r\n    // 선택적으로 에러 로깅 서비스에 오류 보고\r\n    if (appError.severity === 'high' || appError.severity === 'critical') {\r\n      // 예: reportErrorToService(appError);\r\n      console.error('Critical error:', appError);\r\n    }\r\n    \r\n    return appError;\r\n  }, [router]);\r\n  \r\n  const clearErrors = useCallback(() => {\r\n    setErrors([]);\r\n    setHasUnreadErrors(false);\r\n  }, []);\r\n  \r\n  const markErrorsAsRead = useCallback(() => {\r\n    setHasUnreadErrors(false);\r\n  }, []);\r\n  \r\n  const removeError = useCallback((errorId: string) => {\r\n    setErrors(prev => prev.filter(err => err.id !== errorId));\r\n  }, []);\r\n  \r\n  // 에러 발생 시 서비스 워커로 오프라인 로깅\r\n  useEffect(() => {\r\n    const handleWindowError = (event: ErrorEvent) => {\r\n      addError(\r\n        event.message || '예상치 못한 오류가 발생했습니다',\r\n        event.error, \r\n        { severity: 'high', source: 'window' }\r\n      );\r\n    };\r\n    \r\n    window.addEventListener('error', handleWindowError);\r\n    return () => window.removeEventListener('error', handleWindowError);\r\n  }, [addError]);\r\n  \r\n  return {\r\n    errors,\r\n    hasUnreadErrors,\r\n    addError,\r\n    clearErrors,\r\n    markErrorsAsRead,\r\n    removeError,\r\n    isPending,\r\n  };\r\n}"],"names":[],"mappings":";;;AAEA;AACA;AACA;;;;;;AAJA;;;;;AAiBA,MAAM,kBAAgC;IACpC,UAAU;IACV,WAAW;IACX,oBAAoB;IACpB,sBAAsB;AACxB;AAEO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACnD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChE,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;IAEjD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,SAAiB,OAAsB,UAAwB,CAAC,CAAC;QAC7F,MAAM,OAAO;YAAE,GAAG,eAAe;YAAE,GAAG,OAAO;QAAC;QAC9C,MAAM,YAAY,OAAO,QAAQ;QAEjC,MAAM,WAAqB;YACzB;YACA,MAAM;YACN,UAAU,KAAK,QAAQ;YACvB,QAAQ,KAAK,MAAM,IAAI;YACvB,WAAW,KAAK,GAAG;YACnB,IAAI,CAAA,GAAA,+IAAA,CAAA,SAAM,AAAD;YACT,SAAS,KAAK,OAAO;QACvB;QAEA,UAAU,CAAA,OAAQ;gBAAC;mBAAa;aAAK;QACrC,mBAAmB;QAEnB,YAAY;QACZ,IAAI,KAAK,SAAS,EAAE;YAClB,MAAM,KAAK,CAAC,SAAS;gBACnB,IAAI,SAAS,EAAE;gBACf,UAAU,SAAS,QAAQ,KAAK,aAAa,OAAO;YACtD;QACF;QAEA,oBAAoB;QACpB,IAAI,KAAK,kBAAkB,IAAI,SAAS,QAAQ,KAAK,YAAY;YAC/D,gBAAgB;gBACd,OAAO,IAAI,CAAC,KAAK,oBAAoB,IAAI;YAC3C;QACF;QAEA,yBAAyB;QACzB,IAAI,SAAS,QAAQ,KAAK,UAAU,SAAS,QAAQ,KAAK,YAAY;YACpE,qCAAqC;YACrC,QAAQ,KAAK,CAAC,mBAAmB;QACnC;QAEA,OAAO;IACT,GAAG;QAAC;KAAO;IAEX,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC9B,UAAU,EAAE;QACZ,mBAAmB;IACrB,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACnC,mBAAmB;IACrB,GAAG,EAAE;IAEL,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC/B,UAAU,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;IAClD,GAAG,EAAE;IAEL,0BAA0B;IAC1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,oBAAoB,CAAC;YACzB,SACE,MAAM,OAAO,IAAI,qBACjB,MAAM,KAAK,EACX;gBAAE,UAAU;gBAAQ,QAAQ;YAAS;QAEzC;QAEA,OAAO,gBAAgB,CAAC,SAAS;QACjC,OAAO,IAAM,OAAO,mBAAmB,CAAC,SAAS;IACnD,GAAG;QAAC;KAAS;IAEb,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/app/contexts/ErrorContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { createContext, useContext, ReactNode } from 'react';\r\nimport { AppError, ErrorSeverity } from '../types/error';\r\nimport { useErrorSystem } from '../hooks/useErrorSystem';\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\ninterface ErrorContextType {\r\n  errors: AppError[];\r\n  hasUnreadErrors: boolean;\r\n  addError: (message: string, error?: Error | null, options?: {\r\n    severity?: ErrorSeverity;\r\n    source?: string;\r\n    context?: Record<string, unknown>;\r\n    showToast?: boolean;\r\n    redirectOnCritical?: boolean;\r\n    criticalRedirectPath?: string;\r\n  }) => AppError;\r\n  clearErrors: () => void;\r\n  markErrorsAsRead: () => void;\r\n  removeError: (errorId: string) => void;\r\n  isPending: boolean;\r\n}\r\n\r\nconst ErrorContext = createContext<ErrorContextType | undefined>(undefined);\r\n\r\nexport function ErrorProvider({ children }: { children: ReactNode }) {\r\n  const errorSystem = useErrorSystem();\r\n  \r\n  return (\r\n    <ErrorContext.Provider value={errorSystem}>\r\n      <Toaster position=\"top-right\" />\r\n      {children}\r\n    </ErrorContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useError() {\r\n  const context = useContext(ErrorContext);\r\n  if (context === undefined) {\r\n    throw new Error('useError must be used within an ErrorProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAEA;;;;;;AAJA;;;;;AAwBA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,EAAE,QAAQ,EAA2B;IACjE,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,iBAAc,AAAD;IAEjC,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;;0BAC5B,8OAAC;gBAAQ,UAAS;;;;;;YACjB;;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/app/error.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useError } from './contexts/ErrorContext';\r\n\r\nexport default function GlobalErrorPage({\r\n  error,\r\n  reset,\r\n}: {\r\n  error: Error & { digest?: string };\r\n  reset: () => void;\r\n}) {\r\n  const { addError } = useError();\r\n  \r\n  useEffect(() => {\r\n    // 에러를 컨텍스트에 추가하여 일관된 관리\r\n    addError(\r\n      error.message || '애플리케이션에 치명적인 오류가 발생했습니다', \r\n      error, \r\n      { severity: 'critical', source: 'global' }\r\n    );\r\n  }, [error, addError]);\r\n  \r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-50 px-4\">\r\n      <div className=\"w-full max-w-md p-8 rounded-lg bg-white shadow-lg\">\r\n        <h1 className=\"text-2xl font-bold text-red-600 mb-4\">에러가 발생했습니다</h1>\r\n        <p className=\"text-gray-700 mb-6\">{error.message || '알 수 없는 오류가 발생했습니다'}</p>\r\n        \r\n        <div className=\"flex flex-col space-y-3\">\r\n          <button\r\n            onClick={reset}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n          >\r\n            다시 시도\r\n          </button>\r\n          \r\n          <Link \r\n            href=\"/\"\r\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors text-center\"\r\n          >\r\n            홈으로 돌아가기\r\n          </Link>\r\n        </div>\r\n        \r\n        {error.digest && (\r\n          <p className=\"mt-6 text-xs text-gray-500\">\r\n            오류 참조 코드: {error.digest}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS,gBAAgB,EACtC,KAAK,EACL,KAAK,EAIN;IACC,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,WAAQ,AAAD;IAE5B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wBAAwB;QACxB,SACE,MAAM,OAAO,IAAI,2BACjB,OACA;YAAE,UAAU;YAAY,QAAQ;QAAS;IAE7C,GAAG;QAAC;QAAO;KAAS;IAEpB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAuC;;;;;;8BACrD,8OAAC;oBAAE,WAAU;8BAAsB,MAAM,OAAO,IAAI;;;;;;8BAEpD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAID,8OAAC,4JAAA,CAAA,UAAI;4BACH,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;gBAKF,MAAM,MAAM,kBACX,8OAAC;oBAAE,WAAU;;wBAA6B;wBAC7B,MAAM,MAAM;;;;;;;;;;;;;;;;;;AAMnC","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport { urlAlphabet }\n"],"names":[],"mappings":";;;AAAA,IAAI,cACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/node_modules/nanoid/index.js"],"sourcesContent":["import crypto from 'crypto'\nimport { urlAlphabet } from './url-alphabet/index.js'\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nlet fillPool = bytes => {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nlet random = bytes => {\n  fillPool((bytes |= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  fillPool((size |= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += urlAlphabet[pool[i] & 63]\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AACA,MAAM,uBAAuB;AAC7B,IAAI,MAAM;AACV,IAAI,WAAW,CAAA;IACb,IAAI,CAAC,QAAQ,KAAK,MAAM,GAAG,OAAO;QAChC,OAAO,OAAO,WAAW,CAAC,QAAQ;QAClC,qGAAA,CAAA,UAAM,CAAC,cAAc,CAAC;QACtB,aAAa;IACf,OAAO,IAAI,aAAa,QAAQ,KAAK,MAAM,EAAE;QAC3C,qGAAA,CAAA,UAAM,CAAC,cAAc,CAAC;QACtB,aAAa;IACf;IACA,cAAc;AAChB;AACA,IAAI,SAAS,CAAA;IACX,SAAU,SAAS;IACnB,OAAO,KAAK,QAAQ,CAAC,aAAa,OAAO;AAC3C;AACA,IAAI,eAAe,CAAC,UAAU,aAAa;IACzC,IAAI,OAAO,CAAC,KAAM,KAAK,KAAK,KAAK,CAAC,AAAC,SAAS,MAAM,GAAG,IAAK,EAAG,IAAI;IACjE,IAAI,OAAO,KAAK,IAAI,CAAC,AAAC,MAAM,OAAO,cAAe,SAAS,MAAM;IACjE,OAAO,CAAC,OAAO,WAAW;QACxB,IAAI,KAAK;QACT,MAAO,KAAM;YACX,IAAI,QAAQ,UAAU;YACtB,IAAI,IAAI;YACR,MAAO,IAAK;gBACV,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI;gBACnC,IAAI,GAAG,MAAM,KAAK,MAAM,OAAO;YACjC;QACF;IACF;AACF;AACA,IAAI,iBAAiB,CAAC,UAAU,OAAO,EAAE,GACvC,aAAa,UAAU,MAAM;AAC/B,IAAI,SAAS,CAAC,OAAO,EAAE;IACrB,SAAU,QAAQ;IAClB,IAAI,KAAK;IACT,IAAK,IAAI,IAAI,aAAa,MAAM,IAAI,YAAY,IAAK;QACnD,MAAM,kJAAA,CAAA,cAAW,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG;IACjC;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}}]
}