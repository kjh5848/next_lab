{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/styles/movie.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"movie\": \"movie-module__BWtyzG__movie\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/components/movie.tsx"],"sourcesContent":["import Link from \"next/link\";\r\nimport styles from \"../styles/movie.module.css\"\r\n\r\n\r\ninterface IMovieProps {\r\n  title: string;\r\n  id: string;\r\n  poster_path: string;\r\n}\r\n\r\nexport default function Movie({ \r\n    title, id, poster_path \r\n}: \r\n    IMovieProps \r\n    ) {\r\n  return (\r\n    <div className={styles.movie}>\r\n      <Link  href={`/movies/${id}`}> <img src={poster_path} alt={title} /></Link>\r\n      <Link href={`/movies/${id}`}>{title}</Link>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AASe,SAAS,MAAM,EAC1B,KAAK,EAAE,EAAE,EAAE,WAAW,EAEX;IAEb,qBACE,8OAAC;QAAI,WAAW,2HAAA,CAAA,UAAM,CAAC,KAAK;;0BAC1B,8OAAC,4JAAA,CAAA,UAAI;gBAAE,MAAM,CAAC,QAAQ,EAAE,IAAI;;oBAAE;kCAAC,8OAAC;wBAAI,KAAK;wBAAa,KAAK;;;;;;;;;;;;0BAC3D,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAM,CAAC,QAAQ,EAAE,IAAI;0BAAG;;;;;;;;;;;;AAGpC","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/styles/home.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"container\": \"home-module__NoU7wq__container\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/app/%28home%29/page.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport Link from \"next/link\";\r\nimport Movie from \"../../components/movie\";\r\nimport styles from \"../../styles/home.module.css\"\r\n\r\nexport const metadata = {\r\n  title: \"Home\",\r\n};\r\n\r\nexport const API_URL = \"https://nomad-movies.nomadcoders.workers.dev/movies\";\r\n\r\nasync function getMovies() {\r\n  console.log(\"I fetching\");\r\n  await new Promise((resolve) => setTimeout(resolve, 1000));\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n}\r\n\r\nexport default async function HomePage() {\r\n  const movies = await getMovies();\r\n  return (\r\n    <div className={styles.container}>\r\n      {movies.map((movie) => (\r\n        <Movie\r\n        key={movie.id}\r\n        title={movie.title}\r\n        id={movie.id}\r\n        poster_path={movie.poster_path}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AAEA;AACA;;;;;AAEO,MAAM,WAAW;IACtB,OAAO;AACT;AAEO,MAAM,UAAU;AAEvB,eAAe;IACb,QAAQ,GAAG,CAAC;IACZ,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;IACnD,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;IACjC,OAAO,SAAS,IAAI;AACtB;AAEe,eAAe;IAC5B,MAAM,SAAS,MAAM;IACrB,qBACE,8OAAC;QAAI,WAAW,0HAAA,CAAA,UAAM,CAAC,SAAS;kBAC7B,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC,oHAAA,CAAA,UAAK;gBAEN,OAAO,MAAM,KAAK;gBAClB,IAAI,MAAM,EAAE;gBACZ,aAAa,MAAM,WAAW;eAHzB,MAAM,EAAE;;;;;;;;;;AAQrB","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/styles/movie-info.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"companies\": \"movie-info-module__xv9QNq__companies\",\n  \"company\": \"movie-info-module__xv9QNq__company\",\n  \"container\": \"movie-info-module__xv9QNq__container\",\n  \"details\": \"movie-info-module__xv9QNq__details\",\n  \"homepage\": \"movie-info-module__xv9QNq__homepage\",\n  \"info\": \"movie-info-module__xv9QNq__info\",\n  \"meta\": \"movie-info-module__xv9QNq__meta\",\n  \"poster\": \"movie-info-module__xv9QNq__poster\",\n  \"rating\": \"movie-info-module__xv9QNq__rating\",\n  \"runtime\": \"movie-info-module__xv9QNq__runtime\",\n  \"section\": \"movie-info-module__xv9QNq__section\",\n  \"sectionTitle\": \"movie-info-module__xv9QNq__sectionTitle\",\n  \"tagline\": \"movie-info-module__xv9QNq__tagline\",\n  \"title\": \"movie-info-module__xv9QNq__title\",\n  \"year\": \"movie-info-module__xv9QNq__year\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/components/movie-info.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_URL } from \"../app/(home)/page\";\r\nimport { unstable_cache } from \"next/cache\";\r\nimport styles from \"../styles/movie-info.module.css\"\r\n\r\nconst getMovie = async (id: string) => {\r\n  const res = await fetch(`${API_URL}/${id}`, { cache: \"force-cache\" });\r\n  return res.json();\r\n};\r\n//fetch를 권장\r\n\r\n\r\n// // Next.js 15에서는 `unstable_cache`가 안정화되어 사용 가능합니다\r\n// const getMovie = unstable_cache(\r\n//   async (id: string) => {\r\n//     const res = await axios.get(`${API_URL}/${id}`);\r\n//     return res.data;\r\n//   },\r\n//   // 캐시 키 배열 - 이 키가 변경되면 캐시가 무효화됩니다\r\n//   [\"movie-data\"],\r\n//   // 캐싱 옵션\r\n//   {\r\n//     revalidate: 3600, // 1시간마다 재검증\r\n//     tags: [\"movie\"], // 캐시 태그 지정\r\n//   }\r\n// );\r\n\r\n// export default async function MovieInfo({ id }: { id: string }) {\r\n//   const movie = await getMovie(id);\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <img className={styles.poster} src={movie.poster_path} alt={movie.title} />\r\n//       <div className={styles.info}>\r\n//         <h1 className={styles.title}>{movie.title}</h1>\r\n//         <h3 >⭐{movie.vote_average.toFixed(1)}</h3>\r\n//         <p>{movie.overview}</p>\r\n//         <a href={movie.homepage} target={\"_blank\"} >HomePage &rarr;</a>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default async function MovieInfo({ id }: { id: string }) {\r\n  const movie = await getMovie(id);\r\n  \r\n  // 포스터 이미지 URL 완성\r\n  const posterUrl = movie.poster_path.startsWith('http') \r\n    ? movie.poster_path \r\n    : `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n  \r\n  // 배경 이미지 URL 완성\r\n  const backdropUrl = movie.backdrop_path;\r\n  \r\n  // 출시일 포맷팅\r\n  const releaseDate = new Date(movie.release_date).toLocaleDateString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  });\r\n  \r\n  // 장르 문자열 생성\r\n  const genres = movie.genres.map(genre => genre.name).join(', ');\r\n  \r\n  // 상영 시간 포맷팅 (시간과 분)\r\n  const hours = Math.floor(movie.runtime / 60);\r\n  const minutes = movie.runtime % 60;\r\n  const runtime = `${hours}시간 ${minutes}분`;\r\n  \r\n  return (\r\n    <>\r\n      {/* 배경 이미지 오버레이 */}\r\n      {backdropUrl && (\r\n        <div \r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100vh',\r\n            backgroundImage: `url(${backdropUrl})`,\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            opacity: 0.15,\r\n            zIndex: -1,\r\n          }}\r\n        />\r\n      )}\r\n      \r\n      <div className={styles.container}>\r\n        <img \r\n          className={styles.poster} \r\n          src={posterUrl} \r\n          alt={movie.title} \r\n        />\r\n        \r\n        <div className={styles.info}>\r\n          <h1 className={styles.title}>{movie.title}</h1>\r\n          {movie.tagline && (\r\n            <p className={styles.tagline}>\"{movie.tagline}\"</p>\r\n          )}\r\n          \r\n          <div className={styles.meta}>\r\n            <span className={styles.rating}>⭐ {movie.vote_average.toFixed(1)}</span>\r\n            <span className={styles.year}>{movie.release_date.split('-')[0]}</span>\r\n            <span className={styles.runtime}>{runtime}</span>\r\n          </div>\r\n          \r\n          <div className={styles.details}>\r\n            <div className={styles.section}>\r\n              <h3 className={styles.sectionTitle}>개요</h3>\r\n              <p>{movie.overview}</p>\r\n            </div>\r\n            \r\n            <div className={styles.section}>\r\n              <h3 className={styles.sectionTitle}>장르</h3>\r\n              <p>{genres}</p>\r\n            </div>\r\n            \r\n            <div className={styles.section}>\r\n              <h3 className={styles.sectionTitle}>개봉일</h3>\r\n              <p>{releaseDate}</p>\r\n            </div>\r\n            \r\n            <div className={styles.section}>\r\n              <h3 className={styles.sectionTitle}>제작 국가</h3>\r\n              <p>{movie.production_countries.map(country => country.name).join(', ')}</p>\r\n            </div>\r\n            \r\n            <div className={styles.section}>\r\n              <h3 className={styles.sectionTitle}>제작사</h3>\r\n              <div className={styles.companies}>\r\n                {movie.production_companies.map(company => (\r\n                  <span key={company.id} className={styles.company}>\r\n                    {company.name}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            \r\n            {movie.homepage && (\r\n              <a \r\n                href={movie.homepage}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className={styles.homepage}\r\n              >\r\n                공식 홈페이지 방문하기 &rarr;\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 552, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/styles/movie-videos.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"container\": \"movie-videos-module__-fEI0G__container\",\n  \"featuredVideo\": \"movie-videos-module__-fEI0G__featuredVideo\",\n  \"noVideos\": \"movie-videos-module__-fEI0G__noVideos\",\n  \"publishDate\": \"movie-videos-module__-fEI0G__publishDate\",\n  \"sectionTitle\": \"movie-videos-module__-fEI0G__sectionTitle\",\n  \"title\": \"movie-videos-module__-fEI0G__title\",\n  \"videoCard\": \"movie-videos-module__-fEI0G__videoCard\",\n  \"videoGrid\": \"movie-videos-module__-fEI0G__videoGrid\",\n  \"videoSection\": \"movie-videos-module__-fEI0G__videoSection\",\n  \"videoTitle\": \"movie-videos-module__-fEI0G__videoTitle\",\n  \"videoWrapper\": \"movie-videos-module__-fEI0G__videoWrapper\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/components/movie-video.tsx"],"sourcesContent":["import { API_URL } from \"../app/(home)/page\";\r\nimport styles from \"../styles/movie-videos.module.css\";\r\n\r\n// 비디오 타입 정의\r\ninterface Video {\r\n  id: string;\r\n  key: string;\r\n  name: string;\r\n  site: string;\r\n  type: string;\r\n  official: boolean;\r\n  published_at: string;\r\n  iso_639_1: string;\r\n}\r\n\r\n// 비디오 타입별 그룹화를 위한 인터페이스\r\ninterface VideoGroups {\r\n  [key: string]: Video[];\r\n}\r\n\r\nasync function getVideos(id: string) {\r\n  try {\r\n    const res = await fetch(`${API_URL}/${id}/videos`);\r\n    if (!res.ok) {\r\n      throw new Error(`Failed to fetch videos: ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching videos:\", error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport default async function MovieVideos({ id }: { id: string }) {\r\n  const videos = await getVideos(id);\r\n\r\n  // 비디오가 없는 경우 처리\r\n  if (!videos || videos.length === 0) {\r\n    return (\r\n      <div className={styles.container}>\r\n        <h2 className={styles.title}>Videos</h2>\r\n        <p className={styles.noVideos}>No videos available for this movie.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 비디오를 타입별로 그룹화\r\n  const groupedVideos: VideoGroups = videos.reduce(\r\n    (groups: VideoGroups, video: Video) => {\r\n      const type = video.type || \"Other\";\r\n      if (!groups[type]) {\r\n        groups[type] = [];\r\n      }\r\n      groups[type].push(video);\r\n      return groups;\r\n    },\r\n    {}\r\n  );\r\n\r\n  // 주요 비디오 타입을 우선적으로 표시\r\n  const displayOrder = [\r\n    \"Trailer\",\r\n    \"Teaser\",\r\n    \"Clip\",\r\n    \"Featurette\",\r\n    \"Behind the Scenes\",\r\n    \"Other\",\r\n  ];\r\n\r\n  // 최신 영상이 먼저 오도록 정렬 함수\r\n  const sortByDate = (a: Video, b: Video) => {\r\n    return (\r\n      new Date(b.published_at).getTime() - new Date(a.published_at).getTime()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>Videos</h2>\r\n\r\n      {/* 비디오 타입별로 섹션 생성 */}\r\n      {displayOrder.map((type) => {\r\n        const videosOfType = groupedVideos[type];\r\n        if (!videosOfType || videosOfType.length === 0) return null;\r\n\r\n        return (\r\n          <div key={type} className={styles.videoSection}>\r\n            <h3 className={styles.sectionTitle}>{type}s</h3>\r\n\r\n            {/* 첫 번째 비디오는 크게 표시 (주로 최신 예고편) */}\r\n            {type === \"Trailer\" && videosOfType.sort(sortByDate)[0] && (\r\n              <div className={styles.featuredVideo}>\r\n                <iframe\r\n                  width=\"100%\"\r\n                  height=\"500\"\r\n                  src={`https://www.youtube.com/embed/${videosOfType[0].key}`}\r\n                  title={videosOfType[0].name}\r\n                  frameBorder=\"0\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                ></iframe>\r\n                <h4 className={styles.videoTitle}>{videosOfType[0].name}</h4>\r\n                <p className={styles.publishDate}>\r\n                  {new Date(videosOfType[0].published_at).toLocaleDateString(\r\n                    \"ko-KR\",\r\n                    {\r\n                      year: \"numeric\",\r\n                      month: \"long\",\r\n                      day: \"numeric\",\r\n                    }\r\n                  )}\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n            {/* 비디오 그리드 */}\r\n            <div className={styles.videoGrid}>\r\n              {videosOfType\r\n                .sort(sortByDate)\r\n                // 트레일러의 경우 첫 번째는 이미 크게 표시했으므로 두 번째부터\r\n                .slice(type === \"Trailer\" ? 1 : 0)\r\n                .map((video) => (\r\n                  <div key={video.id} className={styles.videoCard}>\r\n                    <div className={styles.videoWrapper}>\r\n                      <iframe\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        src={`https://www.youtube.com/embed/${video.key}`}\r\n                        title={video.name}\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                      ></iframe>\r\n                    </div>\r\n                    <h4 className={styles.videoTitle}>{video.name}</h4>\r\n                    <p className={styles.publishDate}>\r\n                      {new Date(video.published_at).toLocaleDateString(\r\n                        \"ko-KR\",\r\n                        {\r\n                          year: \"numeric\",\r\n                          month: \"long\",\r\n                          day: \"numeric\",\r\n                        }\r\n                      )}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 791, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kjh58/%EB%AC%B8%EC%84%9C/GitHub/next_lab/app/%28movies%29/movies/%5Bid%5D/page.tsx"],"sourcesContent":["import { Suspense } from \"react\";\r\nimport MovieInfo from \"../../../../components/movie-info\";\r\nimport MovieVideos from \"../../../../components/movie-video\";\r\n\r\nexport default async function Page({ params }: { params: { id: string } }) {\r\n  const { id } = await params;//next 15버전 부터는 await를 써줘야 함.\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <Suspense fallback={<h1 className=\"text-2xl\">Loading movie info...</h1>}>\r\n        <MovieInfo id={id} />\r\n      </Suspense>\r\n      <Suspense fallback={<h1 className=\"text-2xl\">Loading movie videos...</h1>}>\r\n        <MovieVideos id={id} />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,eAAe,KAAK,EAAE,MAAM,EAA8B;IACvE,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAO,6BAA6B;IACzD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC;oBAAG,WAAU;8BAAW;;;;;;0BAC3C,cAAA,8OAAC,4HAAA,CAAA,UAAS;oBAAC,IAAI;;;;;;;;;;;0BAEjB,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC;oBAAG,WAAU;8BAAW;;;;;;0BAC3C,cAAA,8OAAC,6HAAA,CAAA,UAAW;oBAAC,IAAI;;;;;;;;;;;;;;;;;AAIzB","debugId":null}}]
}